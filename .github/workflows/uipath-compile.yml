name: UiPath Orchestrator Pipeline

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  pack:
    runs-on: windows-latest
    outputs:
      pack_status: ${{ steps.pack-step.outcome }}
    steps:
      - uses: actions/checkout@v4

      - name: Download NuGet
        shell: pwsh
        run: |
          curl -L -o nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe

      - name: Install UiPath CLI (UiPath feed + fallback)
        shell: pwsh
        run: |
          $feed = "https://pkgs.dev.azure.com/uipath/Public.Feeds/_packaging/UiPath-Official/nuget/v3/index.json"
          .\nuget.exe sources Add -Name "UiPath-Official" -Source $feed -NonInteractive -ConfigFile .\NuGet.Config 2>$null || Write-Host "source add skipped"
          $candidates = @("UiPath.CLI.Windows","UiPath.CLI","UiPath.Cli.Windows","UiPath.Cli")
          $installed = $false
          foreach ($n in $candidates) {
            Write-Host "Trying: $n"
            & .\nuget.exe install $n -OutputDirectory .\uipath-cli -Source "UiPath-Official" -NonInteractive
            if ($LASTEXITCODE -eq 0) { $installed = $true; break }
          }
          if (-not $installed) {
            $versions = @("1.3.0","1.2.0")
            foreach ($v in $versions) {
              $url = "https://pkgs.dev.azure.com/uipath/Public.Feeds/_packaging/UiPath-Official/nuget/v3/flat2/uipath.cli.windows/$v/uipath.cli.windows.$v.nupkg"
              try { Invoke-WebRequest -Uri $url -OutFile ".\uipath-cli\uipath.cli.windows.$v.nupkg" -UseBasicParsing -ErrorAction Stop; Expand-Archive -Path ".\uipath-cli\uipath.cli.windows.$v.nupkg" -DestinationPath .\uipath-cli -Force; $installed = $true; break } catch { Write-Host ("dl fail {0}: {1}" -f $v, $_.Exception.Message) }
            }
          }
          if (-not $installed) { Write-Host "CLI install failed"; Get-ChildItem .\uipath-cli -Recurse -Force | Select-Object -First 200; exit 1 }

      - name: Run pack and capture log
        id: pack-step
        shell: pwsh
        run: |
          $cli = Get-ChildItem .\uipath-cli -Recurse -Filter uipcli.exe | Select-Object -First 1
          if (-not $cli) { Write-Host "uipcli.exe not found"; Get-ChildItem .\uipath-cli -Recurse; exit 1 }
          & $cli.FullName pack --input "Golden_Template" --output ".\dist" --version "1.0.${{ github.run_number }}" --type Process 2>&1 | Tee-Object pack.log
        continue-on-error: false

      - name: Upload pack artifacts and log
        uses: actions/upload-artifact@v4
        with:
          name: uipath-pack-results
          path: |
            .\dist\*.nupkg
            pack.log

  analyze:
    needs: pack
    runs-on: ubuntu-latest
    steps:
      - name: Download pack artifacts
        uses: actions/download-artifact@v4
        with:
          name: uipath-pack-results
          path: ./uipath-pack-results

      - name: Inspect pack.log
        run: |
          if [ -f ./uipath-pack-results/pack.log ]; then
            echo "---- tail pack.log ----"
            tail -n 200 ./uipath-pack-results/pack.log || true
            if grep -i -E "exception|error|failed|Unable to find package" ./uipath-pack-results/pack.log >/dev/null; then
              echo "Pack produced errors. Failing analyze job."
              exit 2
            else
              echo "No obvious errors found in pack.log."
            fi
          else
            echo "pack.log not found in artifacts"
            exit 1
          fi

      - name: Post PR comment with summary
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runUrl = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const conclusion = (await github.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: parseInt(process.env.GITHUB_RUN_ID)
            })).data.conclusion || 'unknown';
            const body = `UiPath orchestration run [#${process.env.GITHUB_RUN_ID}](${runUrl}) concluded: **${conclusion}**.\n\nArtifacts: uipath-pack-results (pack.log + .nupkg if produced).`;
            await github.issues.createComment({
              ...context.repo,
              issue_number: context.payload.pull_request.number,
              body
            });