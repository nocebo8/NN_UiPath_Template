<Activity mc:Ignorable="sap sap2010 sap2013" x:Class="FinalizeCSVReport" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sap2013="http://schemas.microsoft.com/netfx/2013/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference" Capacity="25">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Text</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Finalize CSV Report" sap:VirtualizedContainerService.HintSize="496,237" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <ui:InvokeCode DisplayName="Add Summary To CSV Report" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Code>
        <![CDATA[
// Calculate success rate
var successRate = in_TotalTransactions > 0 ? (double)in_SuccessfulTransactions / in_TotalTransactions * 100 : 0;

// Add summary section to CSV
using (var writer = new StreamWriter(in_ReportPath, true, Encoding.UTF8))
{
    writer.WriteLine(); // Empty line for separation
    writer.WriteLine("=== PODSUMOWANIE ===");
    writer.WriteLine($"Łączna liczba transakcji;{in_TotalTransactions}");
    writer.WriteLine($"Udane transakcje;{in_SuccessfulTransactions}");
    writer.WriteLine($"Nieudane transakcje;{in_FailedTransactions}");
    writer.WriteLine($"Wskaźnik sukcesu;{successRate:F2}%");
    writer.WriteLine($"Łączny czas przetwarzania [s];{in_TotalProcessingTime:F2}");
    writer.WriteLine($"Średni czas na transakcję [s];{(in_TotalTransactions > 0 ? in_TotalProcessingTime / in_TotalTransactions : 0):F2}");
    writer.WriteLine($"Data zakończenia;{DateTime.Now:yyyy-MM-dd HH:mm:ss}");
}
]]>
      </ui:InvokeCode.Code>
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ReportPath">
          <CSharpValue x:TypeArguments="x:String">in_ReportPath</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_TotalTransactions">
          <CSharpValue x:TypeArguments="x:Int32">in_TotalTransactions</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_SuccessfulTransactions">
          <CSharpValue x:TypeArguments="x:Int32">in_SuccessfulTransactions</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_FailedTransactions">
          <CSharpValue x:TypeArguments="x:Int32">in_FailedTransactions</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_TotalProcessingTime">
          <CSharpValue x:TypeArguments="x:Double">in_TotalProcessingTime</CSharpValue>
        </InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Report Finalized" sap:VirtualizedContainerService.HintSize="334,94" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[String.Format(&quot;CSV Report finalized: {0}&quot;, in_ReportPath)]" />
  </Sequence>
</Activity>
